# Azure Pipelines YAML

trigger:
- master

pool:
  name: WindowVm  # Specify the custom agent pool name here

jobs:
- job: BuildAndDeploy
  displayName: 'Build and Deploy'
  
  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '3.1.x'
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'clean install'
      options: '-DskipTests=true'
      mavenVersionOption: 'Path'
      mavenAuthenticateFeed: false

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(System.DefaultWorkingDirectory)/target'
      targetFolder: '$(Build.ArtifactStagingDirectory)'

  - powershell: |
      # PowerShell script to copy WAR file locally and deploy to Tomcat webapps directory

      # Define paths
      $warFile = Get-ChildItem -Path "$(Build.ArtifactStagingDirectory)\*.war"
      $localCopyDir = "C:\Program Files\warfolder"  # Update this with the local directory where you want to copy the WAR file

      # Display information
      Write-Host "Listing WAR files in $(Build.ArtifactStagingDirectory):"
      $warFile | ForEach-Object { Write-Host " - $($_.FullName)" }

      # Check if WAR file exists
      if (-not $warFile) {
          Write-Host "No WAR files found in $(Build.ArtifactStagingDirectory)"
          exit 1
      }

      # Copy WAR file locally
      try {
          $localCopyPath = Join-Path -Path $localCopyDir -ChildPath $warFile.Name
          Write-Host "Copying $($warFile.FullName) to $localCopyPath"
          Copy-Item -Path $warFile.FullName -Destination $localCopyPath -ErrorAction Stop
          Write-Host "WAR file copied locally to $localCopyPath"
      } catch {
          Write-Host "Error copying WAR file locally: $_"
          exit 1
      }

      # Deploy WAR file to Tomcat webapps directory
      $tomcatWebappsDir = "C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps\sampleapp"  # Update this with the Tomcat webapps directory
      try {
          Write-Host "Copying $($warFile.FullName) to $tomcatWebappsDir"
          Copy-Item -Path $warFile.FullName -Destination $tomcatWebappsDir -ErrorAction Stop
          Write-Host "WAR file deployed successfully to $tomcatWebappsDir"
      } catch {
          Write-Host "Error deploying WAR file to Tomcat: $_"
          exit 1
      }
    displayName: 'Copy and Deploy WAR file'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'warfile'
      publishLocation: 'Container'
